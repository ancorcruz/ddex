#
# Auto-generated by jaxb2ruby v0.0.1 on 2016-07-11 13:50:27 +0100
# https://github.com/sshaw/jaxb2ruby
#
#
# DO NOT MODIFY
# Automatically generated by jaxb2ruby v0.0.1 (https://github.com/sshaw/jaxb2ruby)
#

require "roxml"
require "ddex/element"

require "net/ddex/xml/v20110120/ddexc/description"
require "net/ddex/xml/v20110120/ddexc/event_date"
require "net/ddex/xml/v20110120/ddexc/musical_work_id"
require "net/ddex/xml/v20110120/ddexc/reference_title"
require "net/ddex/xml/v20110120/ddexc/resource_contained_resource_reference_list"
require "net/ddex/xml/v20110120/ddexc/resource_musical_work_reference_list"
require "net/ddex/xml/v20110120/ddexc/rights_agreement_id"
require "net/ddex/xml/v20110120/ddexc/sound_recording_details_by_territory"
require "net/ddex/xml/v20110120/ddexc/sound_recording_id"
require "net/ddex/xml/v20110120/ddexc/sound_recording_type"

module Net module Ddex module Xml module V20110120 module Ddexc  # :nodoc: all

class Net::Ddex::Xml::V20110120::Ddexc::SoundRecording < Element
  include ROXML


  xml_name "ns5:SoundRecording"

      xml_accessor :sound_recording_type, :as => Net::Ddex::Xml::V20110120::Ddexc::SoundRecordingType, :from => "SoundRecordingType", :required => false
      xml_accessor :artist_related?, :from => "IsArtistRelated", :required => false
      xml_accessor :sound_recording_ids, :as => [Net::Ddex::Xml::V20110120::Ddexc::SoundRecordingId], :from => "SoundRecordingId", :required => true
      xml_accessor :indirect_sound_recording_ids, :as => [Net::Ddex::Xml::V20110120::Ddexc::MusicalWorkId], :from => "IndirectSoundRecordingId", :required => false
      xml_accessor :resource_reference, :from => "ResourceReference", :required => true
      xml_accessor :reference_title, :as => Net::Ddex::Xml::V20110120::Ddexc::ReferenceTitle, :from => "ReferenceTitle", :required => true
      xml_accessor :instrumentation_description, :as => Net::Ddex::Xml::V20110120::Ddexc::Description, :from => "InstrumentationDescription", :required => false
      xml_accessor :medley?, :from => "IsMedley", :required => false
      xml_accessor :potpourri?, :from => "IsPotpourri", :required => false
      xml_accessor :instrumental?, :from => "IsInstrumental", :required => false
      xml_accessor :background?, :from => "IsBackground", :required => false
      xml_accessor :hidden_resource?, :from => "IsHiddenResource", :required => false
      xml_accessor :bonus_resource?, :from => "IsBonusResource", :required => false
      xml_accessor :computer_generated?, :from => "IsComputerGenerated", :required => false
      xml_accessor :language_of_performance, :from => "LanguageOfPerformance", :required => false
      xml_accessor :duration, :from => "Duration", :required => true
      xml_accessor :rights_agreement_id, :as => Net::Ddex::Xml::V20110120::Ddexc::RightsAgreementId, :from => "RightsAgreementId", :required => false
      xml_accessor :resource_musical_work_reference_list, :as => Net::Ddex::Xml::V20110120::Ddexc::ResourceMusicalWorkReferenceList, :from => "ResourceMusicalWorkReferenceList", :required => false
      xml_accessor :resource_contained_resource_reference_list, :as => Net::Ddex::Xml::V20110120::Ddexc::ResourceContainedResourceReferenceList, :from => "ResourceContainedResourceReferenceList", :required => false
      xml_accessor :creation_date, :as => Net::Ddex::Xml::V20110120::Ddexc::EventDate, :from => "CreationDate", :required => false
      xml_accessor :mastered_date, :as => Net::Ddex::Xml::V20110120::Ddexc::EventDate, :from => "MasteredDate", :required => false
      xml_accessor :sound_recording_details_by_territories, :as => [Net::Ddex::Xml::V20110120::Ddexc::SoundRecordingDetailsByTerritory], :from => "SoundRecordingDetailsByTerritory", :required => true


  
      xml_accessor :language_and_script_code, :from => "@LanguageAndScriptCode", :required => false
    
  

end

end end end end end
